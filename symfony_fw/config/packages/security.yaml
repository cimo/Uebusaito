security:
    # cimo +
    encoders:
        App\Entity\User:
            algorithm: bcrypt
    #role_hierarchy:
    #    ROLE_USER: [ROLE_USER]
    #    ROLE_ADMIN: [ROLE_USER, ROLE_ADMIN]
    #    ROLE_MODERATOR: [ROLE_USER, ROLE_MODERATOR]
        
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # cimo -
        #in_memory: { memory: ~ }
        # cimo +
        user_db:
            entity:
                class: App\Entity\User
                #property: username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            # cimo -
            #anonymous: false
            # cimo +
            anonymous: ~
            provider: user_db
            form_login:
                login_path: root_render
                check_path: authentication_enter_check
                success_handler: app.authentication_listener
                failure_handler: app.authentication_listener
            logout:
                target: root_render
                path: authentication_exit_check
                success_handler: app.authentication_listener
                invalidate_session: false

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html
    
    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
